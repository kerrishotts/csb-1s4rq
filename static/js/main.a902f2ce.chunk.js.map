{"version":3,"sources":["App.js","constants.js","components/Letter.js","components/Clue.js","validator.js","routes/About.js","components/Input.js","components/Guess.js","wordlist.js","sharedGameState.js","components/Game.js","routes/Game.js","index.js"],"names":["App","className","to","CLUES","Letter","letter","clue","Clue","guessNumber","map","idx","getClue","answer","guess","upperAnswer","toUpperCase","upperGuess","Array","from","ch","indexOf","AboutPage","style","maxWidth","Input","defaultValue","onChange","type","handleKeyPress","evt","target","tagName","key","length","preventDefault","getAttribute","value","nextElementSibling","focus","handleKeyUp","previousElementSibling","handleSubmit","cb","form","theRealGuess","querySelectorAll","el","join","trim","setTimeout","firstTextElement","document","querySelector","Guess","onSubmit","paddedGuess","padEnd","onKeyPress","onKeyUp","words","useGameState","useState","guesses","Math","floor","random","state","setState","addGuess","useCallback","winningStrings","Game","useBetween","clues","won","GamePage","rootElement","getElementById","ReactDOM","render","path","element","index"],"mappings":"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","file":"static/js/main.a902f2ce.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport { Link, Outlet } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>REACTLE</h1>\n      <nav>\n        <Link to=\"/\">Home</Link> | <Link to=\"/about\">About</Link>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n","export const CLUES = {\n  NOT_IN_WORD: \"not-in-word\",\n  IN_WORD: \"in-word\",\n  CORRECT: \"correct\"\n};\n","import \"./Letter.css\";\nimport { CLUES } from \"../constants.js\";\n\nexport default function Letter({ letter = \" \", clue } = {}) {\n  return <div className={`letter ${clue}`}>{letter}</div>;\n}\n","import \"./Clue.css\";\n\nimport Letter from \"./Letter.js\";\n\nexport default function Clue({ clue, guessNumber = 1 } = {}) {\n  return (\n    <div className=\"clue\">\n      <div className=\"guessNumber\">{guessNumber}.</div>\n      {clue.map((clue, idx) => (\n        <Letter letter={clue.letter} clue={clue.clue} key={idx} />\n      ))}\n    </div>\n  );\n}\n","import { CLUES } from \"./constants.js\";\n\nexport function getClue({ answer, guess } = {}) {\n  const upperAnswer = answer.toUpperCase();\n  const upperGuess = guess.toUpperCase();\n  return Array.from(upperGuess, (ch, idx) => ({\n    letter: ch,\n    clue:\n      upperAnswer[idx] === ch\n        ? CLUES.CORRECT\n        : upperAnswer.indexOf(ch) > -1\n        ? CLUES.IN_WORD\n        : CLUES.NOT_IN_WORD\n  }));\n}\n","import Clue from \"../components/Clue\";\nimport Letter from \"../components/Letter\";\n\nimport { CLUES } from \"../constants.js\";\nimport { getClue } from \"../validator.js\";\n\nexport default function AboutPage() {\n  const clue = getClue({ answer: \"MISTY\", guess: \"DAISY\" });\n\n  return (\n    <div style={{ maxWidth: \"40em\" }}>\n      <h2>How to play</h2>\n      <p>\n        You have six tries to guess a five letter word. After each guess, you're\n        provided hints to help you guess the word.\n      </p>\n      <div className=\"guess\">\n        <Letter letter=\"R\" clue={CLUES.NOT_IN_WORD} />\n        <span>The letter is not in the word</span>\n      </div>\n      <div className=\"guess\">\n        <Letter letter=\"A\" clue={CLUES.IN_WORD} />\n        <span>The letter is in the word, but not in this position</span>\n      </div>\n      <div className=\"guess\">\n        <Letter letter=\"Y\" clue={CLUES.CORRECT} />\n        <span>The letter is in the word in the correct position</span>\n      </div>\n      <p>\n        For example, if you guessed \"DAISY\", you might receive the following\n        clues:\n      </p>\n      <Clue guess=\"DAISY\" clue={clue} />\n      <p>You can infer the following:</p>\n      <ul>\n        <li>\n          The \"Y\" is in the correct place, and so the word must end in \"Y\".\n        </li>\n        <li>\n          \"I\" and \"S\" both appear <i>in the word</i>, but at different places.\n        </li>\n        <li>\n          The letters \"D\" and \"A\" do not appear at all in the word, and so it's\n          pointless to continue using these letters in your guesses.\n        </li>\n      </ul>\n      <p>(In this example, the actual word is \"MISTY\")</p>\n    </div>\n  );\n}\n","import \"./Input.css\";\n\nexport default function Input({ defaultValue, onChange } = {}) {\n  return (\n    <input type=\"text\" defaultValue={defaultValue} className=\"letter input\" />\n  );\n}\n","import \"./Guess.css\";\n\nimport Input from \"./Input.js\";\n\nfunction handleKeyPress(evt) {\n  const target = evt.target;\n  if (target.tagName !== \"INPUT\") return; /* non-input fields don't count */\n  if (evt.key.length !== 1) return; /* don't want ENTER to register */\n  evt.preventDefault(); /* comes after length check -- ENTER should still always submit */\n  if (target.getAttribute(\"type\") !== \"submit\")\n    target.value = evt.key.toUpperCase();\n  target.nextElementSibling && target.nextElementSibling.focus();\n}\n\nfunction handleKeyUp(evt) {\n  const target = evt.target;\n  if (target.tagName !== \"INPUT\") return;\n  if (evt.key === \"Backspace\") {\n    /* Handle backspace correctly */\n    evt.preventDefault();\n    if (target.getAttribute(\"type\") !== \"submit\") target.value = \"\";\n    target.previousElementSibling && target.previousElementSibling.focus();\n  }\n}\n\nfunction handleSubmit(evt, cb) {\n  const form = evt.target;\n  const theRealGuess = Array.from(\n    form.querySelectorAll(\"input[type=text]\"),\n    (el) => el.value\n  )\n    .join(\"\")\n    .trim();\n  evt.preventDefault();\n  if (theRealGuess.length !== 5) return;\n  /* focus next line, if it appears */\n  cb && cb(theRealGuess);\n  setTimeout(() => {\n    const firstTextElement = document.querySelector(\"input[type=text]\");\n    firstTextElement && firstTextElement.focus();\n  }, 0);\n  return false;\n}\n\nexport default function Guess({ guessNumber = 1, guess, onSubmit } = {}) {\n  const paddedGuess = (guess || \"\").padEnd(5, \" \").toUpperCase();\n  return (\n    <form\n      className=\"guess\"\n      onKeyPress={handleKeyPress}\n      onKeyUp={handleKeyUp}\n      onSubmit={(evt) => handleSubmit(evt, onSubmit)}\n    >\n      <div className=\"guessNumber\">{guessNumber}.</div>\n      {Array.from(paddedGuess).map((letter, idx) => (\n        <Input value={letter} key={`${guessNumber}-${idx}`} />\n      ))}\n      <input type=\"submit\" className=\"letter submit\" value=\"⏎\" />\n    </form>\n  );\n}\n","export const words = [\n  \"AMAZE\",\n  \"ANGRY\",\n  \"APPLE\",\n  \"ACHOO\",\n  \"ANGLE\",\n  \"ASHES\",\n  \"BINGO\",\n  \"BEING\",\n  \"CARES\",\n  \"DIARY\",\n  \"EVERY\",\n  \"FIRES\",\n  \"FLAKE\",\n  \"FLOOR\",\n  \"DAISY\",\n  \"DINGO\",\n  \"CHEER\",\n  \"GRAZE\",\n  \"HAIRY\",\n  \"HELLO\",\n  \"INPUT\",\n  \"INGOT\",\n  \"JERKY\",\n  \"LINES\",\n  \"LEAST\",\n  \"LAIRS\",\n  \"MONEY\",\n  \"MODES\",\n  \"MURAL\",\n  \"NINES\",\n  \"IRATE\",\n  \"RAZOR\",\n  \"RAISE\",\n  \"ROUND\",\n  \"RATES\",\n  \"CLOUD\",\n  \"WOULD\",\n  \"COULD\",\n  \"SHOWS\",\n  \"SCENE\",\n  \"SKIRT\",\n  \"SHIRT\",\n  \"DRESS\",\n  \"SHOES\",\n  \"HEELS\",\n  \"CLOTH\",\n  \"MASKS\",\n  \"TRUST\",\n  \"TEACH\",\n  \"THEIR\",\n  \"THESE\",\n  \"TASTE\",\n  \"TABLE\",\n  \"VINES\",\n  \"VISTA\",\n  \"WATER\",\n  \"SKIES\",\n  \"EARTH\",\n  \"ZEBRA\"\n];\n","import { useState, useCallback } from \"react\";\nimport { useBetween } from \"use-between\";\n\nimport { words } from \"./wordlist.js\";\n\nconst useGameState = () => {\n  const [state, setState] = useState({\n    guesses: [],\n    answer: words[Math.floor(Math.random() * words.length)]\n  });\n\n  const addGuess = useCallback(\n    (guess) =>\n      setState((state) => ({\n        guesses: [...state.guesses, guess],\n        answer: state.answer\n      })),\n    []\n  );\n\n  return {\n    state,\n    addGuess\n  };\n};\n\nexport const useSharedGameState = () => useBetween(useGameState);\n","import Guess from \"./Guess.js\";\nimport Clue from \"./Clue.js\";\n\nimport { getClue } from \"../validator.js\";\n\nimport { useSharedGameState } from \"../sharedGameState\";\n\nconst winningStrings = [\n  /* 0          */ \"\",\n  /* 1 attempt  */ \"Incredible!\",\n  /* 2 attempts */ \"Fantastic!\",\n  /* 3 attempts */ \"Well done\",\n  /* 4 attempts */ \"Good job\",\n  /* 5 attempts */ \"Phew!\",\n  /* 6 attempts */ \"Just barely!\"\n];\n\nexport default function Game() {\n  const { state, addGuess } = useSharedGameState();\n\n  const clues = state.guesses.map((guess) =>\n    getClue({ answer: state.answer, guess })\n  );\n  const won = state.guesses[state.guesses.length - 1] === state.answer;\n\n  return (\n    <div className=\"game\">\n      {clues.map((clue, idx) => (\n        <Clue guessNumber={idx + 1} clue={clue} key={idx} />\n      ))}\n      {clues.length <= 5\n        ? !won && (\n            <Guess\n              guess=\"\"\n              guessNumber={clues.length + 1}\n              onSubmit={addGuess}\n            />\n          )\n        : !won && \"Oh no!\"}\n      {won ? winningStrings[clues.length] : \"\"}\n    </div>\n  );\n}\n","import Game from \"../components/Game\";\n\nexport default function GamePage() {\n  return <Game />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport AboutPage from \"./routes/About\";\nimport GamePage from \"./routes/Game\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<GamePage />} />\n          <Route path=\"about\" element={<AboutPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}